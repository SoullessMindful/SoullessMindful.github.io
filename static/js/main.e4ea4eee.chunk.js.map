{"version":3,"sources":["components/NavLink.tsx","components/List.tsx","RWD.ts","components/ContentBlock.tsx","components/StyledContainer.ts","components/WorkElement.tsx","components/EducationElement.tsx","components/Home.tsx","components/Project.tsx","components/Projects.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Container","styled","div","LeftBlock","Label","NavLink","label","path","outside","content","href","target","to","StyledList","ul","StyledListContainer","MainList","props","List","elements","map","element","undefined","sublist","length","XS","L","XL","StyledContentBlock","article","p","isLabel","RWD","ContentBlock","children","StyledContainer","section","StyledWorkElement","StyledTitle","WorkElement","title","place","from","duties","duty","StyledEducationElement","span","EducationElement","field","specialization","thesis","grade","Home","useState","homeData","setHomeData","useEffect","fetch","then","res","a","json","data","catch","techSkills","softSkills","languages","interests","workExperience","education","StyledProjectBlock","HashLine","HashTag","ProjectLink","Project","name","description","tags","links","tag","Projects","projectsData","setProjectsData","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"g5BAIA,IAAMA,EAAYC,IAAOC,IAAV,KAYTC,EAAYF,IAAOC,IAAV,KAQTE,EAAQH,IAAOC,IAAV,KAYEG,EAA2C,SAAC,GAIlD,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,KAEI,IADJC,eACI,SACEC,EACJ,kBAACT,EAAD,KACE,kBAACG,EAAD,MACA,kBAACC,EAAD,KAAQE,IAIZ,OAAOE,EACL,uBAAGE,KAAMH,EAAMI,OAAO,SACnBF,GAGH,kBAAC,IAAD,CAAMG,GAAIL,GAAOE,I,2eClDrB,IAAMI,EAAaZ,IAAOa,GAAV,KAgBVC,EAAsBd,IAAOC,IAAV,KA6BZc,EAAyC,SAACC,GAAD,OACpD,kBAACF,EAAD,KAhBgD,SAArCG,EAAsC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChD,kBAACN,EAAD,KACGM,EAASC,KAAI,SAACC,GAAD,OACZ,4BACGA,EAAQf,WACYgB,IAApBD,EAAQE,SAAyBF,EAAQE,QAAQC,OAAS,EACzD,6BACE,kBAACN,EAAD,CAAMC,SAAUE,EAAQE,gBAExBD,OAOYJ,CAAKD,KC7ChBQ,EAAE,6CAJO,IAIP,OAGFC,GAFC,6CALQ,IAKR,OACA,6CALQ,IAKR,OACA,6CALQ,IAKR,QACDC,EAAE,6CALQ,KAKR,O,grBCJf,IAAMC,EAAqB3B,IAAO4B,QAAV,KAKZ,SAACC,GAAD,OAAQA,EAAEC,QAAU,EAAI,IAKhCC,EDXmB,MCgBjB5B,EAAQH,IAAOC,IAAV,KAiBE+B,EAAqD,SAAC,GAAD,IAChE3B,EADgE,EAChEA,MACA4B,EAFgE,EAEhEA,SAFgE,OAIhE,kBAACN,EAAD,CAAoBG,aAAmBT,IAAVhB,QAChBgB,IAAVhB,EAAsB,kBAAC,EAAD,KAAQA,QAAiBgB,EAC/CY,I,6SCvCE,IAAMC,EAAkBlC,IAAOmC,QAAV,IAYxBJ,EFZmB,M,2XGAvB,IAAMK,EAAoBpC,IAAOC,IAAV,KAkBjBoC,EAAcrC,IAAO6B,EAAV,KAYJS,EAAmD,SAAC,GAAD,IAC9DC,EAD8D,EAC9DA,MACAC,EAF8D,EAE9DA,MACAC,EAH8D,EAG9DA,KACA9B,EAJ8D,EAI9DA,GACA+B,EAL8D,EAK9DA,OAL8D,OAO9D,kBAACN,EAAD,KACE,kBAACC,EAAD,KAAcE,GACd,iCAAOC,GACP,2BACGC,EADH,MACY9B,GAEZ,4BACG+B,EAAOvB,KAAI,SAACwB,GAAD,OACV,4BAAKA,OAGT,+B,2XChDJ,IAAMC,EAAyB5C,IAAOC,IAAV,KAkBtBoC,EAAcrC,IAAO6C,KAAV,KAeJC,EAA6D,SAAC,GAAD,IACxEP,EADwE,EACxEA,MACAQ,EAFwE,EAExEA,MACAP,EAHwE,EAGxEA,MACAC,EAJwE,EAIxEA,KACA9B,EALwE,EAKxEA,GACAqC,EANwE,EAMxEA,eACAC,EAPwE,EAOxEA,OACAC,EARwE,EAQxEA,MARwE,OAUxE,kBAACN,EAAD,KACE,2BACE,kBAAC,EAAD,KAAcL,GADhB,OACwC,kBAAC,EAAD,KAAcQ,IAEtD,iCAAOP,GACP,2BACGC,EADH,MACY9B,GAEZ,8CAAoBqC,GACpB,sCAAYC,GACZ,qCAAWC,GACX,+BChDSC,EAA0B,WAAO,IAAD,cACXC,mBAAc,IADH,mBACpCC,EADoC,KAC1BC,EAD0B,KAG3CC,qBAAU,WACRC,MANmB,mBAOhBC,KADH,uCACQ,WAAOC,GAAP,SAAAC,EAAA,sEAAqBD,EAAIE,OAAzB,mFADR,uDAEGH,MAAK,SAACI,GAAD,OAAUP,EAAYO,MAC3BC,OAAM,kBAAMR,EAAY,SAC1B,IAEH,IAAMS,EAAU,UAAGV,EAASU,kBAAZ,QAA0B,GACpCC,EAAU,UAAGX,EAASW,kBAAZ,QAA0B,GACpCC,EAAS,UAAGZ,EAASY,iBAAZ,QAAyB,GAClCC,EAAS,UAAGb,EAASa,iBAAZ,QAAyB,GAClCC,EAAc,UAAGd,EAASc,sBAAZ,QAA8B,GAC5CC,EAAS,UAAGf,EAASe,iBAAZ,QAAyB,GAExC,OACE,kBAAClC,EAAD,KACE,iCAEE,6BAFF,4EAKA,kBAAC,EAAD,CAAc7B,MAAM,eAClB,kBAAC,EAAD,CAAUa,SAAU6C,KAEtB,kBAAC,EAAD,CAAc1D,MAAM,eAClB,kBAAC,EAAD,CAAUa,SAAU8C,KAEtB,kBAAC,EAAD,CAAc3D,MAAM,aAClB,kBAAC,EAAD,CAAUa,SAAU+C,KAEtB,kBAAC,EAAD,CAAc5D,MAAM,mBACjB8D,EAAehD,KAAI,gBAAGoB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,KAAM9B,EAAvB,EAAuBA,GAAI+B,EAA3B,EAA2BA,OAA3B,OAClB,kBAAC,EAAD,CACEH,MAAOA,EACPC,MAAOA,EACPC,KAAMA,EACN9B,GAAIA,EACJ+B,OAAQA,QAId,kBAAC,EAAD,CAAcrC,MAAM,aACjB+D,EAAUjD,KACT,gBACEoB,EADF,EACEA,MACAQ,EAFF,EAEEA,MACAP,EAHF,EAGEA,MACAC,EAJF,EAIEA,KACA9B,EALF,EAKEA,GACAqC,EANF,EAMEA,eACAC,EAPF,EAOEA,OACAC,EARF,EAQEA,MARF,OAUE,kBAAC,EAAD,CACEX,MAAOA,EACPQ,MAAOA,EACPP,MAAOA,EACPC,KAAMA,EACN9B,GAAIA,EACJqC,eAAgBA,EAChBC,OAAQA,EACRC,MAAOA,QAKf,kBAAC,EAAD,CAAc7C,MAAM,aAClB,kBAAC,EAAD,CAAUa,SAAUgD,O,uwCC3E5B,IAAMG,EAAqBrE,IAAO4B,QAAV,IAWpBG,ENZmB,KMgBnBA,GAKEuC,EAAWtE,IAAO6B,EAAV,KAIR0C,GAAUvE,IAAOC,IAAV,IAcT8B,GAOEyC,GAAcxE,IAAO2D,EAAV,KAyBJc,GAA2C,SAAC,GAAD,IACtDC,EADsD,EACtDA,KACAC,EAFsD,EAEtDA,YAFsD,IAGtDC,YAHsD,MAG/C,GAH+C,MAItDC,aAJsD,MAI9C,GAJ8C,SAMtD,kBAACR,EAAD,KACE,4BAAKK,GACL,2BAAIC,GACJ,kBAACL,EAAD,KACGM,EAAKzD,KAAI,SAAC2D,GAAD,OACR,kBAACP,GAAD,KAAUO,OAGd,2BACGD,EAAM1D,KAAI,gBAAGd,EAAH,EAAGA,MAAOI,EAAV,EAAUA,KAAV,OACT,kBAAC+D,GAAD,CAAa/D,KAAMA,EAAMC,OAAO,SAC7BL,SCrFE0E,GAA8B,WAAO,IAAD,EACP3B,mBAAgB,IADT,mBACxC4B,EADwC,KAC1BC,EAD0B,KAU/C,OAPA1B,qBAAU,WACRC,MANuB,uBAOpBC,KADH,uCACQ,WAAOC,GAAP,SAAAC,EAAA,sEAAqBD,EAAIE,OAAzB,mFADR,uDAEGH,MAAK,SAACI,GAAD,OAAUoB,EAAgBpB,MAC/BC,OAAM,kBAAMmB,EAAgB,SAC9B,IAGD,kBAAC/C,EAAD,KACE,sEACC8C,EAAa7D,KAAI,gBAAGuD,EAAH,EAAGA,KAAMC,EAAT,EAASA,YAAaC,EAAtB,EAAsBA,KAAMC,EAA5B,EAA4BA,MAA5B,OAChB,kBAAC,GAAD,CACEH,KAAMA,EACNC,YAAaA,EACbC,KAAMA,EACNC,MAAOA,SCjBJK,GAAyB,kBACpC,kBAAC,IAAD,KACE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAChB,iDAEF,yBAAKA,UAAU,kBACb,kBAAC,EAAD,CAAS9E,MAAM,OAAOC,KAAK,MAC3B,kBAAC,EAAD,CAASD,MAAM,WAAWC,KAAK,cAC/B,kBAAC,EAAD,CACED,MAAM,SACNC,KAAK,qCACLC,SAAS,IAEX,kBAAC,EAAD,CACEF,MAAM,WACNC,KAAK,qEACLC,SAAS,KAGb,0BAAM4E,UAAU,eACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO7E,KAAK,aACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,SAIN,4BAAQ6E,UAAU,cAAlB,4DCzBcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SD8HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvC,MAAK,SAACwC,GACLA,EAAaC,gBAEdpC,OAAM,SAACqC,GACNC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e4ea4eee.chunk.js","sourcesContent":["import React, { FunctionComponent } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  transition: background-color 0.3s, color 0.3s;\n  height: 1.5em;\n  color: white;\n  cursor: pointer;\n  user-select: none;\n  &:hover {\n    background-color: white;\n    color: hsl(0, 0%, 20%);\n  }\n`\n\nconst LeftBlock = styled.div`\n  display: inline-block;\n  background-color: hsl(270, 100%, 50%);\n  height: 100%;\n  width: 0.5em;\n  vertical-align: middle;\n`\n\nconst Label = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n  padding: 0px 5px;\n`\n\ninterface NavLinkProps {\n  label: string\n  path: string\n  outside?: boolean\n}\n\nexport const NavLink: FunctionComponent<NavLinkProps> = ({\n  label,\n  path,\n  outside = false,\n}) => {\n  const content = (\n    <Container>\n      <LeftBlock />\n      <Label>{label}</Label>\n    </Container>\n  )\n\n  return outside ? (\n    <a href={path} target=\"blank\">\n      {content}\n    </a>\n  ) : (\n    <Link to={path}>{content}</Link>\n  )\n}\n","import React, { FunctionComponent } from 'react'\nimport styled from 'styled-components'\n\nconst StyledList = styled.ul`\n  position: relative;\n  padding-left: 2.5rem;\n  text-align: left;\n  display: inline-block;\n  list-style: none;\n  font-family: 'Fira Code';\n\n  li::before {\n    left: -5rem;\n    position: absolute;\n    content: '() => ';\n    color: hsl(270, 100%, 40%);\n  }\n`\n\nconst StyledListContainer = styled.div`\n  display: inline-block;\n  padding-left: 5rem;\n`\n\ninterface ListElement {\n  label: string\n  sublist?: ListElement[]\n}\n\ninterface ListProps {\n  elements: ListElement[]\n}\n\nexport const List: FunctionComponent<ListProps> = ({ elements }) => (\n  <StyledList>\n    {elements.map((element: ListElement) => (\n      <li>\n        {element.label}\n        {element.sublist !== undefined && element.sublist.length > 0 ? (\n          <div>\n            <List elements={element.sublist} />\n          </div>\n        ) : undefined}\n      </li>\n    ))}\n  </StyledList>\n)\n\nexport const MainList: FunctionComponent<ListProps> = (props) => (\n  <StyledListContainer>{List(props)}</StyledListContainer>\n)\n","export const S_SIZE = 576\nexport const M_SIZE = 768\nexport const L_SIZE = 992\nexport const XL_SIZE = 1200\nexport const XS = `@media only screen and (max-width: ${S_SIZE}px)`\nexport const S = `@media only screen and (min-width: ${S_SIZE}px)`\nexport const M = `@media only screen and (min-width: ${M_SIZE}px)`\nexport const L = `@media only screen and (min-width: ${L_SIZE}px)`\nexport const XL = `@media only screen and (min-width: ${XL_SIZE}px)`\n","import React, { FunctionComponent } from 'react'\nimport styled from 'styled-components'\nimport * as RWD from './../RWD'\n\nconst StyledContentBlock = styled.article<{ isLabel: boolean }>`\n  position: relative;\n  animation: slide-from-left 0.3s;\n  width: 95%;\n  padding: 2.5rem;\n  margin: ${(p) => (p.isLabel ? 3 : 1)}rem 1rem 1rem 1rem;\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: -5px -5px 5px hsl(0, 0%, 80%), 5px 5px 0px hsl(0, 0%, 60%);\n\n  ${RWD.XL} {\n    width: calc(0.95 * ${RWD.XL_SIZE}px);\n  }\n`\n\nconst Label = styled.div`\n  position: absolute;\n  top: -2.5rem;\n  left: 50%;\n  padding: 1rem;\n  border-radius: 2rem;\n  background-color: hsl(0, 0%, 20%);\n  color: white;\n  transform: translateX(-50%);\n  font-family: 'Fira Code';\n  text-transform: capitalize;\n`\n\ninterface ContentBlockProps {\n  label?: string\n}\n\nexport const ContentBlock: FunctionComponent<ContentBlockProps> = ({\n  label,\n  children,\n}) => (\n  <StyledContentBlock isLabel={label !== undefined}>\n    {label !== undefined ? <Label>{label}</Label> : undefined}\n    {children}\n  </StyledContentBlock>\n)\n","import styled from 'styled-components'\nimport * as RWD from '../RWD'\n\nexport const StyledContainer = styled.section`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  font-size: 2rem;\n\n  h2 {\n    color: white;\n    width: 100%;\n  }\n\n  ${RWD.XL} {\n    display: inline-flex;\n    width: ${RWD.XL_SIZE}px;\n  }\n`\n","import React, { FunctionComponent } from 'react'\nimport styled from 'styled-components'\n\nconst StyledWorkElement = styled.div`\n  text-align: left;\n  font-size: 1.5rem;\n\n  ul {\n    list-style-type: '- ';\n  }\n\n  hr {\n    border-color: hsl(270, 100%, 40%);\n    border-bottom: none;\n  }\n\n  &:last-child hr {\n    display: none;\n  }\n`\n\nconst StyledTitle = styled.p`\n  font-weight: bold;\n`\n\ninterface WorkElementProps {\n  title: string\n  place: string\n  from: string\n  to: string\n  duties: string[]\n}\n\nexport const WorkElement: FunctionComponent<WorkElementProps> = ({\n  title,\n  place,\n  from,\n  to,\n  duties,\n}) => (\n  <StyledWorkElement>\n    <StyledTitle>{title}</StyledTitle>\n    <p>at {place}</p>\n    <p>\n      {from} - {to}\n    </p>\n    <ul>\n      {duties.map((duty) => (\n        <li>{duty}</li>\n      ))}\n    </ul>\n    <hr />\n  </StyledWorkElement>\n)\n","import React, { FunctionComponent } from 'react'\nimport styled from 'styled-components'\n\nconst StyledEducationElement = styled.div`\n  text-align: left;\n  font-size: 1.5rem;\n\n  ul {\n    list-style-type: '- ';\n  }\n\n  hr {\n    border-color: hsl(270, 100%, 40%);\n    border-bottom: none;\n  }\n\n  &:last-child hr {\n    display: none;\n  }\n`\n\nconst StyledTitle = styled.span`\n  font-weight: bold;\n`\n\ninterface EducationElementProps {\n  title: string\n  field: string\n  place: string\n  from: string\n  to: string\n  specialization: string\n  thesis: string\n  grade: string\n}\n\nexport const EducationElement: FunctionComponent<EducationElementProps> = ({\n  title,\n  field,\n  place,\n  from,\n  to,\n  specialization,\n  thesis,\n  grade,\n}) => (\n  <StyledEducationElement>\n    <p>\n      <StyledTitle>{title}</StyledTitle> in <StyledTitle>{field}</StyledTitle>\n    </p>\n    <p>at {place}</p>\n    <p>\n      {from} - {to}\n    </p>\n    <p>Specialization: {specialization}</p>\n    <p>Thesis: {thesis}</p>\n    <p>Grade: {grade}</p>\n    <hr />\n  </StyledEducationElement>\n)\n","import React, { useState, useEffect, FunctionComponent } from 'react'\nimport { MainList } from './List'\nimport { ContentBlock } from './ContentBlock'\nimport { StyledContainer } from './StyledContainer'\nimport { WorkElement } from './WorkElement'\nimport { EducationElement } from './EducationElement'\n\nconst PATH_HOME_DATA = '/home-data.json'\n\nexport const Home: FunctionComponent = () => {\n  const [homeData, setHomeData] = useState<any>({})\n\n  useEffect(() => {\n    fetch(PATH_HOME_DATA)\n      .then(async (res) => await res.json())\n      .then((data) => setHomeData(data))\n      .catch(() => setHomeData({}))\n  }, [])\n\n  const techSkills = homeData.techSkills ?? []\n  const softSkills = homeData.softSkills ?? []\n  const languages = homeData.languages ?? []\n  const interests = homeData.interests ?? []\n  const workExperience = homeData.workExperience ?? []\n  const education = homeData.education ?? []\n\n  return (\n    <StyledContainer>\n      <h2>\n        Hi\n        <br />I am a Software Developer, Mathematician and Machine Learning\n        Enthusiast\n      </h2>\n      <ContentBlock label=\"tech skills\">\n        <MainList elements={techSkills} />\n      </ContentBlock>\n      <ContentBlock label=\"soft skills\">\n        <MainList elements={softSkills} />\n      </ContentBlock>\n      <ContentBlock label=\"languages\">\n        <MainList elements={languages} />\n      </ContentBlock>\n      <ContentBlock label=\"work experience\">\n        {workExperience.map(({ title, place, from, to, duties }: any) => (\n          <WorkElement\n            title={title}\n            place={place}\n            from={from}\n            to={to}\n            duties={duties}\n          />\n        ))}\n      </ContentBlock>\n      <ContentBlock label=\"education\">\n        {education.map(\n          ({\n            title,\n            field,\n            place,\n            from,\n            to,\n            specialization,\n            thesis,\n            grade,\n          }: any) => (\n            <EducationElement\n              title={title}\n              field={field}\n              place={place}\n              from={from}\n              to={to}\n              specialization={specialization}\n              thesis={thesis}\n              grade={grade}\n            />\n          )\n        )}\n      </ContentBlock>\n      <ContentBlock label=\"interests\">\n        <MainList elements={interests} />\n      </ContentBlock>\n    </StyledContainer>\n  )\n}\n","import React, { FunctionComponent } from 'react'\nimport styled from 'styled-components'\nimport * as RWD from './../RWD'\n\nconst StyledProjectBlock = styled.article`\n  position: relative;\n  animation: slide-from-left 0.3s;\n  width: 47.5%;\n  font-size: 1.5rem;\n  padding: 1rem;\n  margin: 0.5rem;\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: -3px -3px 3px hsl(0, 0%, 80%), 3px 3px 0px hsl(0, 0%, 60%);\n\n  ${RWD.XL} {\n    width: calc(0.475 * ${RWD.XL_SIZE}px);\n  }\n\n  ${RWD.XS} {\n    width: 95%;\n  }\n`\n\nconst HashLine = styled.p`\n  font-size: 2.4rem;\n`\n\nconst HashTag = styled.div`\n  vertical-align: middle;\n  transition: font-size 0.3s;\n  display: inline-block;\n  font-weight: bold;\n  font-size: 1rem;\n  padding: 0.2rem;\n  margin-right: 0.3rem;\n  background-color: hsl(0, 0%, 85%);\n  &::before {\n    content: '# ';\n    color: hsl(270, 100%, 50%);\n  }\n\n  ${RWD.L} {\n    &:hover {\n      font-size: 1.3rem;\n    }\n  }\n`\n\nconst ProjectLink = styled.a`\n  transition: background-color 0.3s;\n  background-color: hsl(270, 100%, 50%);\n  color: white;\n  font-weight: bold;\n  padding: 0.5rem 1rem;\n  margin-right: 0.5rem;\n  border-radius: 1.5rem;\n  text-decoration: none;\n\n  &:hover {\n    background-color: hsl(300, 100%, 50%);\n  }\n`\n\ninterface ProjectProps {\n  name: string\n  description: string\n  tags?: string[]\n  links?: Array<{\n    label: string\n    href: string\n  }>\n}\n\nexport const Project: FunctionComponent<ProjectProps> = ({\n  name,\n  description,\n  tags = [],\n  links = [],\n}) => (\n  <StyledProjectBlock>\n    <h3>{name}</h3>\n    <p>{description}</p>\n    <HashLine>\n      {tags.map((tag) => (\n        <HashTag>{tag}</HashTag>\n      ))}\n    </HashLine>\n    <p>\n      {links.map(({ label, href }) => (\n        <ProjectLink href={href} target=\"blank\">\n          {label}\n        </ProjectLink>\n      ))}\n    </p>\n  </StyledProjectBlock>\n)\n","import React, { FunctionComponent, useState, useEffect } from 'react'\nimport { StyledContainer } from './StyledContainer'\nimport { Project } from './Project'\n\nconst PATH_PROJECTS_DATA = '/projects-data.json'\n\nexport const Projects: FunctionComponent = () => {\n  const [projectsData, setProjectsData] = useState<any[]>([])\n\n  useEffect(() => {\n    fetch(PATH_PROJECTS_DATA)\n      .then(async (res) => await res.json())\n      .then((data) => setProjectsData(data))\n      .catch(() => setProjectsData([]))\n  }, [])\n\n  return (\n    <StyledContainer>\n      <h2>These are the projects I am working on</h2>\n      {projectsData.map(({ name, description, tags, links }: any) => (\n        <Project\n          name={name}\n          description={description}\n          tags={tags}\n          links={links}\n        />\n      ))}\n    </StyledContainer>\n  )\n}\n","import React, { FunctionComponent } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { NavLink } from './components/NavLink'\nimport { Home } from './components/Home'\nimport './App.css'\nimport { Projects } from './components/Projects'\n\nexport const App: FunctionComponent = () => (\n  <Router>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>soulless MindfuL</h1>\n      </header>\n      <nav className=\"App-navigation\">\n        <NavLink label=\"Home\" path=\"/\" />\n        <NavLink label=\"Projects\" path=\"/projects\" />\n        <NavLink\n          label=\"Github\"\n          path=\"https://github.com/SoullessMindful\"\n          outside={true}\n        />\n        <NavLink\n          label=\"LinkedIn\"\n          path=\"https://www.linkedin.com/in/s%C5%82awomir-kusi%C5%84ski-2401031a8/\"\n          outside={true}\n        />\n      </nav>\n      <main className=\"App-content\">\n        <Switch>\n          <Route path=\"/projects\">\n            <Projects />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </main>\n      <footer className=\"App-footer\">\n        Soulless Mindful - Sławomir Kusiński - 2020\n      </footer>\n    </div>\n  </Router>\n)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config?.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config?.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && !contentType.includes('javascript'))\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}